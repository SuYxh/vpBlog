(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{331:function(v,_,t){"use strict";t.r(_);var e=t(17),n=Object(e.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"多人协作"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多人协作"}},[v._v("#")]),v._v(" 多人协作")]),v._v(" "),t("p",[v._v("多人协作的工作模式通常是这样：")]),v._v(" "),t("p",[v._v("1.首先，可以试图用"),t("code",[v._v("git push origin <branch-name>")]),v._v("推送自己的修改；")]),v._v(" "),t("p",[v._v("2.如果推送失败，则因为远程分支比你的本地更新，需要先用"),t("code",[v._v("git pull")]),v._v("试图合并；")]),v._v(" "),t("p",[v._v("3.如果合并有冲突，则解决冲突，并在本地提交；")]),v._v(" "),t("p",[v._v("4.没有冲突或者解决掉冲突后，再用"),t("code",[v._v("git push origin <branch-name>")]),v._v("推送就能成功！")]),v._v(" "),t("blockquote",[t("p",[v._v("如果"),t("code",[v._v("git pull")]),v._v("提示"),t("code",[v._v("no tracking information")]),v._v("，则说明本地分支和远程分支的链接关系没有创建，用命令"),t("code",[v._v("git branch --set-upstream-to <branch-name> origin/<branch-name>")]),v._v("。")])]),v._v(" "),t("h3",{attrs:{id:"小结"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[v._v("#")]),v._v(" 小结")]),v._v(" "),t("ul",[t("li",[t("p",[v._v("查看远程库信息，使用"),t("code",[v._v("git remote -v")]),v._v("；")])]),v._v(" "),t("li",[t("p",[v._v("本地新建的分支如果不推送到远程，对其他人就是不可见的；")])]),v._v(" "),t("li",[t("p",[v._v("从本地推送分支，使用"),t("code",[v._v("git push origin branch-name")]),v._v("，如果推送失败，先用"),t("code",[v._v("git pull")]),v._v("抓取远程的新提交；")])]),v._v(" "),t("li",[t("p",[v._v("在本地创建和远程分支对应的分支，使用"),t("code",[v._v("git checkout -b branch-name origin/branch-name")]),v._v("，本地和远程分支的名称最好一致；")])]),v._v(" "),t("li",[t("p",[v._v("建立本地分支和远程分支的关联，使用"),t("code",[v._v("git branch --set-upstream branch-name origin/branch-name")]),v._v("；")])]),v._v(" "),t("li",[t("p",[v._v("从远程抓取分支，使用"),t("code",[v._v("git pull")]),v._v("，如果有冲突，要先处理冲突。")])])])])}),[],!1,null,null,null);_.default=n.exports}}]);