(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{327:function(v,_,e){"use strict";e.r(_);var t=e(17),s=Object(t.a)({},(function(){var v=this,_=v.$createElement,e=v._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"bug分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bug分支"}},[v._v("#")]),v._v(" BUG分支")]),v._v(" "),e("h5",{attrs:{id:"场景1：正在开发pay的功能，突然出现一个小bug需要修改【bug出现在master】："}},[e("a",{staticClass:"header-anchor",attrs:{href:"#场景1：正在开发pay的功能，突然出现一个小bug需要修改【bug出现在master】："}},[v._v("#")]),v._v(" 场景1：正在开发pay的功能，突然出现一个小BUG需要修改【bug出现在master】：")]),v._v(" "),e("ol",[e("li",[v._v("使用  "),e("code",[v._v("git stash")]),v._v("  把当前工作现场“储藏”起来 .")]),v._v(" "),e("li",[v._v("用"),e("code",[v._v("git status")]),v._v("查看工作区，是干净的,因此可以放心地创建分支来修复bug。")]),v._v(" "),e("li",[v._v("bug出现在master分支上， 就从"),e("code",[v._v("master")]),v._v("创建临时分支： "),e("code",[v._v("git checkout -b bug2")]),v._v(" , 需要先切回master分支："),e("code",[v._v("git checkout master")])]),v._v(" "),e("li",[v._v("修复bug ：在 bug2分支 新建一个文件写点东西，【搞完记得提交！】 来模仿 修改bug的过程！")]),v._v(" "),e("li",[v._v("修复完成后，切换到"),e("code",[v._v("master")]),v._v("分支，并完成合并，最后删除"),e("code",[v._v("bug2")]),v._v("分支： "),e("code",[v._v("$ git checkout master")]),v._v(" "),e("code",[v._v("$ git merge bug2")]),v._v(" "),e("code",[v._v("$ git branch -d bug2")])]),v._v(" "),e("li",[v._v("现在回到"),e("code",[v._v("pay")]),v._v("分支干继续开发："),e("code",[v._v("$ git checkout pay")]),v._v("  ,再用"),e("code",[v._v("$ git status")]),v._v(" "),e("code",[v._v("$ git stash list")]),v._v("分别查看一下")]),v._v(" "),e("li",[v._v("恢复现场：\n"),e("ul",[e("li",[v._v("用"),e("code",[v._v("git stash apply")]),v._v("恢复，但是恢复后，stash内容并不删除，需要用"),e("code",[v._v("git stash drop")]),v._v("来删除；")]),v._v(" "),e("li",[v._v("用"),e("code",[v._v("git stash pop")]),v._v("，恢复的同时把stash内容也删了：")])])])]),v._v(" "),e("blockquote",[e("p",[v._v("如果多次stash，恢复的时候，先用git stash list查看，然后恢复指定的stash，用命令："),e("code",[v._v("$ git stash apply stash@{0}")])])]),v._v(" "),e("p",[e("strong",[v._v("思考")]),v._v("：在"),e("code",[v._v("master")]),v._v("分支上修复了bug后，我们要想一想，"),e("code",[v._v("dev")]),v._v("分支是早期从"),e("code",[v._v("master")]),v._v("分支分出来的，所以，这个bug其实在当前"),e("code",[v._v("dev")]),v._v("分支上也存在。那怎么在"),e("code",[v._v("dev")]),v._v("分支上修复同样的bug？重复操作一次，提交不就行了？有木有更简单的方法?")]),v._v(" "),e("p",[e("strong",[v._v("方法")]),v._v("：同样的bug，要在"),e("code",[v._v("dev")]),v._v("上修复，我们只需要把"),e("code",[v._v("364d98a fix bug2")]),v._v("这个提交所做的修改“复制”到"),e("code",[v._v("dev")]),v._v("分支。我们只想复制"),e("code",[v._v("364d98a fix bug2")]),v._v("这个提交所做的修改，并不是把整个"),e("code",[v._v("master")]),v._v("分支"),e("code",[v._v("merge")]),v._v("过来。为了方便操作，Git专门提供了一个"),e("code",[v._v("cherry-pick")]),v._v("命令，让我们能复制一个特定的提交到当前分支： "),e("code",[v._v("git cherry-pick 364d98a")]),v._v("【先切换到"),e("code",[v._v("dev")]),v._v("在使用命令】。 用"),e("code",[v._v("git cherry-pick")]),v._v("，我们就不需要在"),e("code",[v._v("dev")]),v._v("分支上手动再把修bug的过程重复一遍。")]),v._v(" "),e("blockquote",[e("p",[v._v("既然可以在"),e("code",[v._v("master")]),v._v("分支上修复bug后，在"),e("code",[v._v("dev")]),v._v("分支上可以“重放”这个修复过程，那么直接在"),e("code",[v._v("dev")]),v._v("分支上修复bug，然后在"),e("code",[v._v("master")]),v._v("分支上“重放”行不行？当然可以，不过你仍然需要"),e("code",[v._v("git stash")]),v._v("命令保存现场，才能从"),e("code",[v._v("dev")]),v._v("分支切换到"),e("code",[v._v("master")]),v._v("分支。")])])])}),[],!1,null,null,null);_.default=s.exports}}]);