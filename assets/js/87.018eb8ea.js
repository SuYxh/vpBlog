(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{333:function(t,e,v){"use strict";v.r(e);var _=v(17),r=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"撤销修改"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#撤销修改"}},[t._v("#")]),t._v(" 撤销修改")]),t._v(" "),v("p",[t._v("命令"),v("code",[t._v("git checkout -- readme.txt")]),t._v("意思就是，把"),v("code",[t._v("readme.txt")]),t._v("文件在工作区的修改全部撤销，这里有两种情况：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("一种是"),v("strong",[t._v("readme.txt")]),t._v("自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；")])]),t._v(" "),v("li",[v("p",[t._v("一种是"),v("strong",[t._v("readme.txt")]),t._v("已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。")])])]),t._v(" "),v("p",[t._v("总之，就是让这个文件回到最近一次"),v("code",[t._v("git commit")]),t._v("或"),v("code",[t._v("git add")]),t._v("时的状态。")]),t._v(" "),v("blockquote",[v("p",[v("code",[t._v("git checkout -- file")]),t._v("命令中的--很重要，没有--，就变成了“切换到另一个分支”的命令")])]),t._v(" "),v("hr"),t._v(" "),v("p",[t._v("用命令"),v("code",[t._v("git reset HEAD <file>")]),t._v("可以把暂存区的修改撤销掉（unstage），重新放回工作区：")]),t._v(" "),v("p",[v("code",[t._v("git reset")]),t._v("命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。")]),t._v(" "),v("h3",{attrs:{id:"小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令"),v("code",[t._v("git checkout -- file")]),t._v("。")])]),t._v(" "),v("li",[v("p",[t._v("场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令"),v("code",[t._v("git reset HEAD <file>")]),t._v("，就回到了场景1，第二步按场景1操作。")])]),t._v(" "),v("li",[v("p",[t._v("场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退，不过前提是没有推送到远程库。")])])])])}),[],!1,null,null,null);e.default=r.exports}}]);